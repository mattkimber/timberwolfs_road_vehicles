{{ $zoom := parseint .globals.zoom -}}
{{- $horse_type := .horse_type }}
{{- $id := .id -}}
{{ $articulated_lengths := slice .lengths }}
{{- range $index, $element := slice .articulated_graphics -}}
{{ $ttd_len := index $articulated_lengths $index }}
{{- $template := concat "template_auto_" $ttd_len }}
{{- $lte0 := le $index 0 -}}{{- if and $horse_type $lte0 -}}{{- else -}}
{{- if ne $element "" -}}
{{ $el_usc := concat "_" $element }}{{ $spr_id := concat $id $el_usc }}{{ altsprites8 $spr_id $template $zoom }}
{{- else -}}{{ altsprites8 $id $template $zoom }}{{- end -}}
{{- end -}}
{{- end}}

spriteset (spriteset_purchase_{{.id}}, "purchase/{{.id}}_purchase.vox.png" ) 
{ template_purchase() } 

// Cargo articulation switches
switch (FEAT_ROADVEHS, SELF, switch_{{.id}}_articulation, extra_callback_info1) 
{ 
    {{- range $index, $element := slice .articulated_configuration -}}
    {{ $index }}: return {{ $id }};
    {{- end}}
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

// Cargo in trailer switch
switch (FEAT_ROADVEHS, SELF, switch_{{.id}}_cargo_selector, cargo_type_in_veh ) { 
    {{ template "cargo_selector_v3" . }}
    
    // Default to the goods sprite
    {{if .has_covered_goods}}return spriteset_{{.trailer}}_goods;{{else}}return switch_{{.trailer}}_cargo_good;{{end}}
}


{{ $trailers := parseint .articulated_units }}

// Trailer vs. motive unit switch
switch (FEAT_ROADVEHS, SELF, switch_{{.id}}_graphics, position_in_consist ) { 
     0: {{- if $horse_type }}switch_{{$horse_type}}_animation{{- else }}spriteset_{{$id}}{{end}};
     {{ if gt $trailers 2 }}
     switch_{{.id}}_cargo_selector; 
     {{else}}
     1: switch_{{.id}}_cargo_selector;
     spriteset_invisible;
     {{end}}
}


// TODO: restore the alternate goods switch
{{/* {{- if .has_alternate_goods -}}
switch (FEAT_ROADVEHS, SELF, switch_{{$id}}_graphics_goods, position_in_consist ) { 
     0: {{- if $horse_type }}switch_{{$horse_type}}_animation{{- else }}spriteset_{{$id}}{{end}};
    {{ if gt $trailers 2 }}
    switch_{{.trailer}}_random_goods; 
    {{else}}
     1: switch_{{.trailer}}_random_goods; 
     spriteset_invisible;
     {{end}}
}
{{- end }} */}}

switch (FEAT_ROADVEHS, SELF, switch_{{.id}}_capacity_other, position_in_consist ) 
{ 
    0: return 1;
    1: return {{.capacity_per_trailer}} - 1;
    {{ if gt $trailers 2 }}
    return {{.capacity_per_trailer}};
    {{ else }}
    return 0;
    {{- end}}
}

// Mail switch does nothing as there is no value for it currently.
switch (FEAT_ROADVEHS, SELF, switch_{{.id}}_capacity_mail, position_in_consist ) 
{ 
    0: return 1;
    1: return {{.capacity_per_trailer}} - 1;
    {{ if gt $trailers 2 }}
    return {{.capacity_per_trailer}};
    {{ else }}
    return 0;
    {{- end}}
}

switch(FEAT_ROADVEHS, SELF, switch_{{.id}}_capacity, cargo_type_in_veh) {
  MAIL: switch_{{.id}}_capacity_mail;
  VALU: switch_{{.id}}_capacity_mail;
  switch_{{.id}}_capacity_other;
}

switch (FEAT_ROADVEHS, SELF, switch_{{.id}}_length, position_in_consist ) 
{ 
    {{- range $index, $element := slice .lengths -}}
    {{$index }}: return {{ $element }};
    {{- end}}    
    return 8;
}

{{ $engine := .engine }}
{{ $smoke_loc := .smoke_location }}
switch (FEAT_ROADVEHS, SELF, switch_{{.id}}_visual_effect, position_in_consist ) 
{ 
    {{- range $index, $element := slice .articulated_visual_effects -}}
    {{- if ne $element "" -}}
    {{- if eq $engine "steam" }}
    {{ $index }}: return param_smoke ? visual_effect(VISUAL_EFFECT_STEAM, {{ $smoke_loc }}) : VISUAL_EFFECT_DISABLE;
    {{- else if eq $engine "diesel" }}
    {{ $index }}: return param_smoke ? visual_effect(VISUAL_EFFECT_DIESEL, {{ $smoke_loc }}) : VISUAL_EFFECT_DISABLE;
    {{- else if eq $engine "powerful" }}
    {{ $index }}: return param_smoke ? visual_effect(VISUAL_EFFECT_DIESEL, {{ $smoke_loc }}) : VISUAL_EFFECT_DISABLE;
    {{- else if eq $engine "coach" }}
    {{ $index }}: return param_smoke ? visual_effect(VISUAL_EFFECT_DIESEL, {{ $smoke_loc }}) : VISUAL_EFFECT_DISABLE;
    {{- else if eq $engine "electric" }}
    {{ $index }}: return param_smoke ? visual_effect(VISUAL_EFFECT_ELECTRIC, {{ $smoke_loc }}) : VISUAL_EFFECT_DISABLE;
    {{- else }}
    {{ $index }}: return VISUAL_EFFECT_DISABLE;
    {{ end -}}
    {{- end -}}
    {{- end}}
    return VISUAL_EFFECT_DISABLE;    
}


item(FEAT_ROADVEHS, {{.id}}, {{.numeric_id}}) {
    property {
        {{template "rv_props" . }}
        refittable_cargo_classes:       bitmask(CC_BULK, CC_LIQUID, CC_PIECE_GOODS, CC_EXPRESS, CC_REFRIGERATED, CC_ARMOURED, CC_MAIL);
        non_refittable_cargo_classes:   bitmask(CC_PASSENGERS);
        default_cargo_type:             GOOD;
    }

    graphics {
        additional_text: return {{.additional_text_string}};
        {{template "speed_limiter" . }}

        visual_effect: switch_{{.id}}_visual_effect;
        articulated_part: switch_{{.id}}_articulation;
        cargo_capacity: switch_{{.id}}_capacity;
        length: switch_{{.id}}_length;
        purchase_cargo_capacity: spriteset_purchase_{{.id}};
        purchase: spriteset_purchase_{{.id}};

        // Use a single switch, decide the cargo in here
        default: switch_{{$id}}_graphics;
    }
}

