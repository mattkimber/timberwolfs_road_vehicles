{{ $zoom := parseint .globals.zoom -}}
{{- $horse_type := .horse_type }}
{{- $engine_sprite := .engine_sprite}}
{{- $id := .id -}}
{{ $articulated_lengths := slice .articulated_lengths }}

{{- range $index, $element := slice .articulated_graphics -}}
{{ $ttd_len := index $articulated_lengths $index }}
{{- $template := concat "template_auto_" $ttd_len }}
{{- $lte0 := le $index 0 -}}
{{- if and $engine_sprite $lte0 -}}
{{ else -}}
{{- if eq $engine_sprite "" -}}{{- if ne $element "" -}}
    {{ $el_usc := concat "_" $element }}{{ $spr_id := concat $id $el_usc }}{{ altsprites8 $spr_id $template $zoom }}
{{- else -}}
    {{ altsprites8 $id $template $zoom }}{{- end -}}
{{- end -}}{{- end -}}
{{- end}}

spriteset(spriteset_{{.id}}_purchase, "1x/{{.id}}_purchase.png") { template_purchase_1x() }
alternative_sprites(spriteset_{{.id}}_purchase, ZOOM_LEVEL_IN_2X, BIT_DEPTH_8BPP, "2x/{{.id}}_purchase.png") { template_purchase_2x() }

// Cargo articulation switches
switch (FEAT_ROADVEHS, SELF, switch_{{.id}}_articulation, extra_callback_info1) 
{ 
    {{- range $index, $element := slice .articulated_configuration }}
    {{ $index }}: return {{ $id }};{{end}}
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

// Cargo in trailer switch
switch (FEAT_ROADVEHS, SELF, switch_{{.id}}_cargo_selector, cargo_type_in_veh ) { 
    {{ template "cargo_selector_v3" . }}
    
    // Default to the goods sprite
    {{if .has_covered_goods}}return spriteset_{{.trailer}}_goods;{{else}}return switch_{{.trailer}}_cargo_good;{{end}}
}

{{ $trailers := parseint .articulated_units -}}
// Trailer vs. motive unit switch
switch (FEAT_ROADVEHS, SELF, switch_{{.id}}_graphics, position_in_consist ) { 
     {{if .additional_power_units}}0..{{.additional_power_units}}{{else}}0{{end}}: 
     {{- if $horse_type }}switch_{{$horse_type}}_animation{{- else }}{{if $engine_sprite}}spriteset_{{$engine_sprite}}{{else}}spriteset_{{$id}}{{end}}{{end}};
     {{ if gt $trailers 2 }}
     switch_{{.id}}_cargo_selector; 
     {{else}}
     1: switch_{{.id}}_cargo_selector;
     spriteset_invisible;
     {{end}}
}

switch (FEAT_ROADVEHS, SELF, switch_{{.id}}_capacity_other, position_in_consist ) 
{ 
    {{if .additional_power_units}}0..{{.additional_power_units}}{{else}}0{{end}}: return 1;
    {{if .additional_power_units}}1+{{.additional_power_units}}{{else}}1{{end}}: return {{.capacity_per_trailer}} - {{if .additional_power_units}}(1+{{.additional_power_units}}){{else}}1{{end}};
    {{ if gt $trailers 2 }}
    return {{.capacity_per_trailer}};
    {{ else }}
    return 0;
    {{- end}}
}

switch (FEAT_ROADVEHS, SELF, switch_{{.id}}_capacity_boosted, position_in_consist ) 
{ 
    {{if .additional_power_units}}0..{{.additional_power_units}}{{else}}0{{end}}: return 1;
    {{if .additional_power_units}}1+{{.additional_power_units}}{{else}}1{{end}}: return ({{.capacity_per_trailer}} * 2) - {{if .additional_power_units}}(1+{{.additional_power_units}}){{else}}1{{end}};
    {{ if gt $trailers 2 }}
    return {{.capacity_per_trailer}} * 2;
    {{ else }}
    return 0;
    {{- end}}
}

switch(FEAT_ROADVEHS, SELF, switch_{{.id}}_capacity, cargo_type_in_veh) {
  MAIL: switch_{{.id}}_capacity_boosted;
  VALU: switch_{{.id}}_capacity_boosted;
  GOOD: switch_{{.id}}_capacity_boosted;
  ENSP: switch_{{.id}}_capacity_boosted;
  FMSP: switch_{{.id}}_capacity_boosted;
  POWR: switch_{{.id}}_capacity_boosted;
  switch_{{.id}}_capacity_other;
}

switch (FEAT_ROADVEHS, SELF, switch_{{.id}}_length, position_in_consist ) 
{ 
    {{- range $index, $element := slice .articulated_lengths }}
    {{$index }}: return {{ $element }};
    {{- end}}    
    return 8;
}

{{template "running_cost_switch" . }}

{{ $engine := .engine }}
{{- $smoke_loc := .smoke_location }}
{{- if ne $engine "horse" }}
switch (FEAT_ROADVEHS, SELF, switch_{{.id}}_visual_effect, position_in_consist ) 
{ 
    {{- range $index, $element := slice .articulated_visual_effects -}}
    {{- if ne $element "" -}}
    {{- if eq $engine "steam" }}
    {{ $index }}: return param_smoke ? visual_effect(VISUAL_EFFECT_STEAM, {{ $smoke_loc }}) : VISUAL_EFFECT_DISABLE;
    {{- else if eq $engine "diesel" }}
    {{ $index }}: return param_smoke ? visual_effect(VISUAL_EFFECT_DIESEL, {{ $smoke_loc }}) : VISUAL_EFFECT_DISABLE;
    {{- else if eq $engine "powerful" }}
    {{ $index }}: return param_smoke ? visual_effect(VISUAL_EFFECT_DIESEL, {{ $smoke_loc }}) : VISUAL_EFFECT_DISABLE;
    {{- else if eq $engine "coach" }}
    {{ $index }}: return param_smoke ? visual_effect(VISUAL_EFFECT_DIESEL, {{ $smoke_loc }}) : VISUAL_EFFECT_DISABLE;
    {{- else if eq $engine "electric" }}
    {{ $index }}: return param_smoke ? visual_effect(VISUAL_EFFECT_ELECTRIC, {{ $smoke_loc }}) : VISUAL_EFFECT_DISABLE;
    {{- else }}
    {{ $index }}: return VISUAL_EFFECT_DISABLE;
    {{ end -}}
    {{- end -}}
    {{- end}}
    return VISUAL_EFFECT_DISABLE;    
}
{{- end}}


item(FEAT_ROADVEHS, {{.id}}, {{.numeric_id}}) {
    property {
        {{template "rv_props" . }}
        refittable_cargo_classes:       bitmask(CC_BULK, CC_LIQUID, CC_PIECE_GOODS, CC_EXPRESS, CC_REFRIGERATED, CC_ARMOURED, CC_MAIL);
        non_refittable_cargo_classes:   bitmask(CC_PASSENGERS);
        default_cargo_type:             COAL;
    }

    graphics {
        additional_text: return {{.additional_text_string}};
        {{template "speed_limiter" . }}

        {{if ne $engine "horse" }}visual_effect: switch_{{.id}}_visual_effect;{{end}}
        articulated_part: switch_{{.id}}_articulation;
        cargo_capacity: switch_{{.id}}_capacity;
        length: switch_{{.id}}_length;
        {{if .horse_type}}
        colour_mapping: switch_{{.horse_type}}_{{if .additional_power_units}}plus{{.additional_power_units}}_{{end}}colour_mapping;
        purchase_colour_mapping: return base_sprite_2cc + CB_RESULT_COLOUR_MAPPING_ADD_CC;
        {{end}}
        purchase_cargo_capacity: spriteset_{{.id}}_purchase;
        purchase: spriteset_{{.id}}_purchase;
        running_cost_factor: switch_{{.id}}_running_cost;
        purchase_running_cost_factor: return {{.running_cost}};

        // Use a single switch, decide the cargo in here
        default: switch_{{$id}}_graphics;
    }
}

